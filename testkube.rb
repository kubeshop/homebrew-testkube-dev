# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Testkube < Formula
  desc "Testkube - your somewhat opinionated and friendly Kubernetes testing framework!"
  homepage "https://testkube.io"
  version "2.1.26-beta001"
  license "MIT"

  depends_on "helm"
  depends_on "kubectl"

  on_macos do
    on_intel do
      url "https://github.com/kubeshop/testkube/releases/download/v2.1.26-beta001/testkube_2.1.26-beta001_Darwin_x86_64.tar.gz"
      sha256 "b8e7575f36ad0db7963795731df1d2430dffb5d8974ebd2b57985fef4ab0a092"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
    on_arm do
      url "https://github.com/kubeshop/testkube/releases/download/v2.1.26-beta001/testkube_2.1.26-beta001_Darwin_arm64.tar.gz"
      sha256 "91d490421918de3a52012ccaf934ce5c2f10c3e238590c0b32f2ac65ceb3eff4"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v2.1.26-beta001/testkube_2.1.26-beta001_Linux_x86_64.tar.gz"
        sha256 "aeee1f7e47650c6377287dee9b15edf2f6d0303f543257f9e191eccc696f9dd9"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v2.1.26-beta001/testkube_2.1.26-beta001_Linux_arm64.tar.gz"
        sha256 "df2c37937752851e6e7440772c8bd0cd4ce750e56279429695bdd7019e993f42"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
  end
end
