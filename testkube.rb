# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Testkube < Formula
  desc "Testkube - your somewhat opinionated and friendly Kubernetes testing framework!"
  homepage "https://testkube.io"
  version "1.17.68-beta001"
  license "MIT"

  depends_on "helm"
  depends_on "kubectl"

  on_macos do
    on_intel do
      url "https://github.com/kubeshop/testkube/releases/download/v1.17.68-beta001/testkube_1.17.68-beta001_Darwin_x86_64.tar.gz"
      sha256 "6e92490cd99635c76977d35ff01978d0d7dff1de1c7ffb296e990985b74ad70b"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
    on_arm do
      url "https://github.com/kubeshop/testkube/releases/download/v1.17.68-beta001/testkube_1.17.68-beta001_Darwin_arm64.tar.gz"
      sha256 "5c19e7a544bd4524efd4e1bc1f9e4c5f3fc3e6b5253ecaeb07a692176f9c142a"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v1.17.68-beta001/testkube_1.17.68-beta001_Linux_x86_64.tar.gz"
        sha256 "7e9cdfdf43e7984732102890f997bc55d7086d1032688c558760de7fa4311bba"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v1.17.68-beta001/testkube_1.17.68-beta001_Linux_arm64.tar.gz"
        sha256 "b5bb6b3b331716725e02bb7637072a2bbc0fb678dd58258cfb2fd5a1ab97aa80"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
  end
end
