# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Testkube < Formula
  desc "Testkube - your somewhat opinionated and friendly Kubernetes testing framework!"
  homepage "https://testkube.io"
  version "1.17.69-beta021"
  license "MIT"

  depends_on "helm"
  depends_on "kubectl"

  on_macos do
    on_intel do
      url "https://github.com/kubeshop/testkube/releases/download/v1.17.69-beta021/testkube_1.17.69-beta021_Darwin_x86_64.tar.gz"
      sha256 "9ad99e262edf642ef4803fb56f33ea75953bed34e4ad2c32a02f7f1530203952"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
    on_arm do
      url "https://github.com/kubeshop/testkube/releases/download/v1.17.69-beta021/testkube_1.17.69-beta021_Darwin_arm64.tar.gz"
      sha256 "9b524e5045a2886d535bc68fdbb51ed6efc626861f819af760363112059566ea"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v1.17.69-beta021/testkube_1.17.69-beta021_Linux_x86_64.tar.gz"
        sha256 "97baa0ef630e16a325057574665c364755a23dbeb04c414067a2dde07d427d79"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v1.17.69-beta021/testkube_1.17.69-beta021_Linux_arm64.tar.gz"
        sha256 "e211a27497757aa279e37a44437873719293e7f4347b77797571ba657f20102f"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
  end
end
