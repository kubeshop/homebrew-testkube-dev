# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Testkube < Formula
  desc "Testkube - your somewhat opinionated and friendly Kubernetes testing framework!"
  homepage "https://testkube.io"
  version "2.1.29-beta017"
  license "MIT"

  depends_on "helm"
  depends_on "kubectl"

  on_macos do
    on_intel do
      url "https://github.com/kubeshop/testkube/releases/download/v2.1.29-beta017/testkube_2.1.29-beta017_Darwin_x86_64.tar.gz"
      sha256 "723dbafb63ce78e046ae089e6b46ec462baaccadadf47a5a6a55ffaa16ecfb9d"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
    on_arm do
      url "https://github.com/kubeshop/testkube/releases/download/v2.1.29-beta017/testkube_2.1.29-beta017_Darwin_arm64.tar.gz"
      sha256 "e8ac9fde218207d9ec4ee36c31484f6fc4282e68503242e416ad7fce9fab8d55"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v2.1.29-beta017/testkube_2.1.29-beta017_Linux_x86_64.tar.gz"
        sha256 "5347d645600b2159f6099586b5dd255c36eceb6dcb2c57bae0af527403dd5dfc"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v2.1.29-beta017/testkube_2.1.29-beta017_Linux_arm64.tar.gz"
        sha256 "96811893219cb3f5b61bc1d8dc19fb4b7b871379e2fc6abfcbfb876af1247ab4"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
  end
end
