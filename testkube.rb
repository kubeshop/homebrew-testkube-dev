# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Testkube < Formula
  desc "Testkube - your somewhat opinionated and friendly Kubernetes testing framework!"
  homepage "https://testkube.io"
  version "2.0.4-beta001"
  license "MIT"

  depends_on "helm"
  depends_on "kubectl"

  on_macos do
    on_intel do
      url "https://github.com/kubeshop/testkube/releases/download/v2.0.4-beta001/testkube_2.0.4-beta001_Darwin_x86_64.tar.gz"
      sha256 "98c0cc6314570c71fc1c9d3341015ab5d89bf3fe690ca873f084429fd2b933bc"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
    on_arm do
      url "https://github.com/kubeshop/testkube/releases/download/v2.0.4-beta001/testkube_2.0.4-beta001_Darwin_arm64.tar.gz"
      sha256 "1347611ba21f8a5fec6a495ca1f72f857b7d196e25eeb3845a8ece59532e1713"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v2.0.4-beta001/testkube_2.0.4-beta001_Linux_x86_64.tar.gz"
        sha256 "c5e66c18bf59d2b37d9477f3e182c2d9f7907e24b8e436dc62b9978447e456fc"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v2.0.4-beta001/testkube_2.0.4-beta001_Linux_arm64.tar.gz"
        sha256 "29b1ca8afc5a713e21a10478d3445380c70f9ba1e69abd9beba6eb177f3974d1"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
  end
end
