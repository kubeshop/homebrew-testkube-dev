# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Testkube < Formula
  desc "Testkube - your somewhat opinionated and friendly Kubernetes testing framework!"
  homepage "https://testkube.io"
  version "2.1.26-beta002"
  license "MIT"

  depends_on "helm"
  depends_on "kubectl"

  on_macos do
    on_intel do
      url "https://github.com/kubeshop/testkube/releases/download/v2.1.26-beta002/testkube_2.1.26-beta002_Darwin_x86_64.tar.gz"
      sha256 "e4baa71421a52e5509a476eff0479f13688e53eec1541f262689c05a43579e09"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
    on_arm do
      url "https://github.com/kubeshop/testkube/releases/download/v2.1.26-beta002/testkube_2.1.26-beta002_Darwin_arm64.tar.gz"
      sha256 "eb3a883b18d3d011df2392e1188fbf7548b8dc2ee44114a7236ea1cbc52b21b2"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v2.1.26-beta002/testkube_2.1.26-beta002_Linux_x86_64.tar.gz"
        sha256 "7df0649bb069df0bf372ac2d752a8511bae93858076c656961c5939af19521c1"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v2.1.26-beta002/testkube_2.1.26-beta002_Linux_arm64.tar.gz"
        sha256 "9d10231f3303720740c3af83e700ac16014a74052a5f042e8d0e4166d2f090a0"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
  end
end
