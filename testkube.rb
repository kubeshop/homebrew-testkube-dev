# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Testkube < Formula
  desc "Testkube - your somewhat opinionated and friendly Kubernetes testing framework!"
  homepage "https://testkube.io"
  version "1.17.69-beta015"
  license "MIT"

  depends_on "helm"
  depends_on "kubectl"

  on_macos do
    on_intel do
      url "https://github.com/kubeshop/testkube/releases/download/v1.17.69-beta015/testkube_1.17.69-beta015_Darwin_x86_64.tar.gz"
      sha256 "f6f2d6ad22d1c4e09e70f4fb280ca74e1c53fb63eff5f998b28ee9807192ce29"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
    on_arm do
      url "https://github.com/kubeshop/testkube/releases/download/v1.17.69-beta015/testkube_1.17.69-beta015_Darwin_arm64.tar.gz"
      sha256 "7dc605f6d9af5302059768e90415c2d481ce2c9bcfb2cd76cdf2312fff6c20e8"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v1.17.69-beta015/testkube_1.17.69-beta015_Linux_x86_64.tar.gz"
        sha256 "2c1a077914d44d1bac27becdaa083f8bd84a4c9551a9c8c5bc4ae9b441af56fc"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v1.17.69-beta015/testkube_1.17.69-beta015_Linux_arm64.tar.gz"
        sha256 "002026eccbc9e3d5c3c6c71e1dd3a66952c182b846f60c93a3bfbc5f4d267213"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
  end
end
