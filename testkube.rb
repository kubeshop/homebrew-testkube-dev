# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Testkube < Formula
  desc "Testkube - your somewhat opinionated and friendly Kubernetes testing framework!"
  homepage "https://testkube.io"
  version "2.0.11-beta001"
  license "MIT"

  depends_on "helm"
  depends_on "kubectl"

  on_macos do
    on_intel do
      url "https://github.com/kubeshop/testkube/releases/download/v2.0.11-beta001/testkube_2.0.11-beta001_Darwin_x86_64.tar.gz"
      sha256 "c60412a10d01353aa3c8672d82d4d42bc5f42d3dfd8e249d3e53d17d3ca591b5"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
    on_arm do
      url "https://github.com/kubeshop/testkube/releases/download/v2.0.11-beta001/testkube_2.0.11-beta001_Darwin_arm64.tar.gz"
      sha256 "ce98f36a533858072912de82b423b18472efde7839289c45464afb6625ad031d"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v2.0.11-beta001/testkube_2.0.11-beta001_Linux_x86_64.tar.gz"
        sha256 "cf5861bd4e551ff6fd2482d973e97a699519d1ecd7f5c169a7dc2b2f7857d9ba"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v2.0.11-beta001/testkube_2.0.11-beta001_Linux_arm64.tar.gz"
        sha256 "046f59f14e70f9e861b289882bae0c7b59c35c304539dd68e59948378156bcf3"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
  end
end
