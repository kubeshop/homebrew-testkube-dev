# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Testkube < Formula
  desc "Testkube - your somewhat opinionated and friendly Kubernetes testing framework!"
  homepage "https://testkube.io"
  version "1.17.69-beta026"
  license "MIT"

  depends_on "helm"
  depends_on "kubectl"

  on_macos do
    on_intel do
      url "https://github.com/kubeshop/testkube/releases/download/v1.17.69-beta026/testkube_1.17.69-beta026_Darwin_x86_64.tar.gz"
      sha256 "203eb3c0cd21ddba3c7a2018d51a79db89ac3df95f26a4ed7607b439eb8fc75b"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
    on_arm do
      url "https://github.com/kubeshop/testkube/releases/download/v1.17.69-beta026/testkube_1.17.69-beta026_Darwin_arm64.tar.gz"
      sha256 "763a614d22e427b387cfa097c1111c9c64013a3e24df80b2679eac13712932f5"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v1.17.69-beta026/testkube_1.17.69-beta026_Linux_x86_64.tar.gz"
        sha256 "1a714132327e9795e58450c1dacfefa2d14c16eb4af571705c9879251ec6740e"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v1.17.69-beta026/testkube_1.17.69-beta026_Linux_arm64.tar.gz"
        sha256 "f7f586152da4c959d648f549e49f59cb49348246b3c36908f54005d7d3235ff2"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
  end
end
